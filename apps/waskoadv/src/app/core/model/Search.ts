// Generated by https://quicktype.io

export interface AlbumsSearchResponse {
    albums: PagingObject<Album>
}
export interface ArtistsSearchResponse {
    artists: PagingObject<Artist>
}

export interface AlbumsResponse {
    albums: Album[];
}

export interface Entity{
    id:                     string;
    name:                   string;
}

// Generated by https://quicktype.io

export interface SpotifyError {
    error: {
        status:  number;
        message: string;
    };
}

export const isSpotifyError = (error: SpotifyError | any): error is SpotifyError => {
    // return error.error?.error?.message
    return 'error' in error && 'message' in error.error
}



// https://developer.spotify.com/documentation/web-api/reference/#object-albumobject
export interface Album extends Entity{
    album_type:             string;
    artists:                Artist[];
    available_markets:      string[];
    copyrights:             Copyright[];
    external_ids:           ExternalIDS;
    external_urls:          ExternalUrls;
    genres:                 any[];
    href:                   string;
    images:                 Image[];
    popularity:             number;
    release_date:           Date;
    release_date_precision: string;
    tracks:                 PagingObject<Track>;
    type:                   'album';
    uri:                    string;
}


export interface MockAlbum{
    id:                     Album['id'];
    name:                   Album['name'];
    images:                 Image[];
    type:                   'album';
    // enableVisualFireworks: boolean
}

export interface AlbumView extends Entity{
    images:                 Image[];
    type:                   'album';
    // enableVisualFireworks: boolean
}

export interface Artist {
    external_urls: ExternalUrls;
    href:          string;
    id:            string;
    name:          string;
    type:          'artist';
    uri:           string;
}

export interface ExternalUrls {
    spotify: string;
}

export interface Copyright {
    text: string;
    type: string;
}

export interface ExternalIDS {
    upc: string;
}

export interface Image {
    height: number;
    url:    string;
    width:  number;
}

export interface PagingObject<T> {
    href:     string;
    items:    T[];
    limit:    number;
    next:     null;
    offset:   number;
    previous: null;
    total:    number;
}

export interface Track {
    artists:           Artist[];
    available_markets: string[];
    disc_number:       number;
    duration_ms:       number;
    explicit:          boolean;
    external_urls:     ExternalUrls;
    href:              string;
    id:                string;
    name:              string;
    preview_url:       string;
    track_number:      number;
    type:              'track';
    uri:               string;
}
